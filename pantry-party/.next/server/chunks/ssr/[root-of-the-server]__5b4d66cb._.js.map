{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/pantry-party/pantry-party/src/app/components/SignInModal.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\n\r\ninterface Props {\r\n    show: boolean;\r\n    onHide: () => void;\r\n}\r\n\r\nconst SignInModal: React.FC<Props> = ({ show, onHide }) => {\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={onHide} backdrop=\"static\" keyboard={false} centered contentClassName=\"custom-modal\">\r\n                <Modal.Header style={{ borderBottom: \"none\", paddingBottom: \"0px\" }} closeButton />\r\n                <Modal.Body className=\"text-center\">\r\n                    <h4>Welcome Back To The Party!</h4>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"identifier\">\r\n                            <Form.Control className=\"text-center\" type=\"text\" placeholder=\"Username/Email\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n                            <Form.Control className=\"text-center\" type=\"password\" placeholder=\"Password\" />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">Sign In</Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignInModal;"],"names":[],"mappings":";;;;;AAEA;AAAA;AAAA;AAFA;;;AASA,MAAM,cAA+B,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE;IAClD,qBACI;kBACI,cAAA,8OAAC,+LAAK;YAAC,MAAM;YAAM,QAAQ;YAAQ,UAAS;YAAS,UAAU;YAAO,QAAQ;YAAC,kBAAiB;;8BAC5F,8OAAC,+LAAK,CAAC,MAAM;oBAAC,OAAO;wBAAE,cAAc;wBAAQ,eAAe;oBAAM;oBAAG,WAAW;;;;;;8BAChF,8OAAC,+LAAK,CAAC,IAAI;oBAAC,WAAU;;sCAClB,8OAAC;sCAAG;;;;;;sCACJ,8OAAC,4LAAI;;8CACD,8OAAC,4LAAI,CAAC,KAAK;oCAAC,WAAU;oCAAO,WAAU;8CACnC,cAAA,8OAAC,4LAAI,CAAC,OAAO;wCAAC,WAAU;wCAAc,MAAK;wCAAO,aAAY;;;;;;;;;;;8CAElE,8OAAC,4LAAI,CAAC,KAAK;oCAAC,WAAU;oCAAO,WAAU;8CACnC,cAAA,8OAAC,4LAAI,CAAC,OAAO;wCAAC,WAAU;wCAAc,MAAK;wCAAW,aAAY;;;;;;;;;;;8CAEtE,8OAAC,kMAAM;oCAAC,SAAQ;oCAAU,MAAK;8CAAS;;;;;;;;;;;;;;;;;;;;;;;;;AAMhE;uCAEe","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/pantry-party/pantry-party/src/app/components/SignUpModal.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\n\r\ninterface Props {\r\n    show: boolean;\r\n    onHide: () => void;\r\n}\r\n\r\nconst SignUpModal: React.FC<Props> = ({ show, onHide }) => {\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={onHide} backdrop=\"static\" keyboard={false} centered contentClassName=\"custom-modal\">\r\n                <Modal.Header style={{ borderBottom: \"none\", paddingBottom: \"0px\" }} closeButton />\r\n                <Modal.Body className=\"text-center\">\r\n                    <h4>Welcome To The Party!</h4>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"username\">\r\n                            <Form.Control className=\"text-center\" type=\"username\" placeholder=\"Username\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                            <Form.Control className=\"text-center\" type=\"email\" placeholder=\"Email\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n                            <Form.Control className=\"text-center\" type=\"password\" placeholder=\"Password\" />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">Sign Up</Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignUpModal;"],"names":[],"mappings":";;;;;AAEA;AAAA;AAAA;AAFA;;;AASA,MAAM,cAA+B,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE;IAClD,qBACI;kBACI,cAAA,8OAAC,+LAAK;YAAC,MAAM;YAAM,QAAQ;YAAQ,UAAS;YAAS,UAAU;YAAO,QAAQ;YAAC,kBAAiB;;8BAC5F,8OAAC,+LAAK,CAAC,MAAM;oBAAC,OAAO;wBAAE,cAAc;wBAAQ,eAAe;oBAAM;oBAAG,WAAW;;;;;;8BAChF,8OAAC,+LAAK,CAAC,IAAI;oBAAC,WAAU;;sCAClB,8OAAC;sCAAG;;;;;;sCACJ,8OAAC,4LAAI;;8CACD,8OAAC,4LAAI,CAAC,KAAK;oCAAC,WAAU;oCAAO,WAAU;8CACnC,cAAA,8OAAC,4LAAI,CAAC,OAAO;wCAAC,WAAU;wCAAc,MAAK;wCAAW,aAAY;;;;;;;;;;;8CAEtE,8OAAC,4LAAI,CAAC,KAAK;oCAAC,WAAU;oCAAO,WAAU;8CACnC,cAAA,8OAAC,4LAAI,CAAC,OAAO;wCAAC,WAAU;wCAAc,MAAK;wCAAQ,aAAY;;;;;;;;;;;8CAEnE,8OAAC,4LAAI,CAAC,KAAK;oCAAC,WAAU;oCAAO,WAAU;8CACnC,cAAA,8OAAC,4LAAI,CAAC,OAAO;wCAAC,WAAU;wCAAc,MAAK;wCAAW,aAAY;;;;;;;;;;;8CAEtE,8OAAC,kMAAM;oCAAC,SAAQ;oCAAU,MAAK;8CAAS;;;;;;;;;;;;;;;;;;;;;;;;;AAMhE;uCAEe","debugId":null}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/pantry-party/pantry-party/src/app/components/SignOutModal.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\ninterface Props {\r\n    show: boolean;\r\n    onHide: () => void;\r\n}\r\n\r\nconst SignOutModal: React.FC<Props> = ({ show, onHide }) => {\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={onHide} backdrop=\"static\" keyboard={false} centered contentClassName=\"custom-modal\">\r\n                <Modal.Header style={{ borderBottom: \"none\", paddingBottom: \"0px\" }} closeButton />\r\n                <Modal.Body className=\"text-center\">\r\n                    <h4>Are You Sure You Want To Sign Out?</h4>\r\n                    <div className=\"sign-out-buttons\">\r\n                        <Button variant=\"danger\" style={{ width: \"125px\" }}>No</Button>\r\n                        <Button variant=\"primary\" style={{ width: \"125px\" }}>Yes, Sign Out</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignOutModal;"],"names":[],"mappings":";;;;;AAEA;AAAA;AAFA;;;AASA,MAAM,eAAgC,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE;IAEnD,qBACI;kBACI,cAAA,8OAAC,+LAAK;YAAC,MAAM;YAAM,QAAQ;YAAQ,UAAS;YAAS,UAAU;YAAO,QAAQ;YAAC,kBAAiB;;8BAC5F,8OAAC,+LAAK,CAAC,MAAM;oBAAC,OAAO;wBAAE,cAAc;wBAAQ,eAAe;oBAAM;oBAAG,WAAW;;;;;;8BAChF,8OAAC,+LAAK,CAAC,IAAI;oBAAC,WAAU;;sCAClB,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;4BAAI,WAAU;;8CACX,8OAAC,kMAAM;oCAAC,SAAQ;oCAAS,OAAO;wCAAE,OAAO;oCAAQ;8CAAG;;;;;;8CACpD,8OAAC,kMAAM;oCAAC,SAAQ;oCAAU,OAAO;wCAAE,OAAO;oCAAQ;8CAAG;;;;;;;;;;;;;;;;;;;;;;;;;AAM7E;uCAEe","debugId":null}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/pantry-party/pantry-party/src/app/components/NavBar.tsx"],"sourcesContent":["'use client';\r\n\r\nimport Link from \"next/link\"\r\nimport { Container, Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Refrigerator, ListCheck, ChefHat, User, ChevronUp, ChevronDown } from \"lucide-react\";\r\nimport {useState } from 'react';\r\nimport SignInModal from '../components/SignInModal';\r\nimport SignUpModal from '../components/SignUpModal';\r\nimport SignOutModal from '../components/SignOutModal';\r\n\r\nconst NavBar: React.FC = () => {\r\n    const [showSignIn, setShowSignIn] = useState(false);\r\n    const [showSignUp, setShowSignUp] = useState(false);\r\n    const [showSignOut, setShowSignOut] = useState(false);\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n    return (\r\n        <>\r\n        <Navbar expand=\"lg\" fixed=\"top\" bg=\"primary\" variant=\"dark\" className=\"custom-navbar\">\r\n            <Container>\r\n                <Navbar.Brand as={Link} href=\"/\">Pantry Party</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"ms-auto\">\r\n                        <Nav.Link as={Link} href=\"/\" className=\"nav-link-icon\">\r\n                            <Refrigerator />\r\n                            <span className=\"nav-link-text\">My Kitchen</span>\r\n                        </Nav.Link>\r\n                        <Nav.Link as={Link} href=\"/\" className=\"nav-link-icon\">\r\n                            <ListCheck />\r\n                            <span className=\"nav-link-text\">Shopping List</span>\r\n                        </Nav.Link>\r\n                        <Nav.Link as={Link} href=\"/\" className=\"nav-link-icon\">\r\n                            <ChefHat />\r\n                            <span className=\"nav-link-text\">Recipes</span>\r\n                        </Nav.Link>\r\n                        <NavDropdown\r\n                        id=\"login-dropdown\"\r\n                        className=\"nav-dropdown\"\r\n                        renderMenuOnMount={true}\r\n                        show={dropdownOpen}\r\n                        onToggle={(isOpen) => setDropdownOpen(isOpen)}\r\n                        title={\r\n                            <span style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\r\n                                <User />\r\n                                {dropdownOpen ? <ChevronUp size={15} /> : <ChevronDown size={15} />}\r\n                            </span>\r\n                        }>\r\n                            <NavDropdown.Item onClick={() => setShowSignIn(true)}>Sign In</NavDropdown.Item>\r\n                            <NavDropdown.Item onClick={() => setShowSignUp(true)}>Sign Up</NavDropdown.Item>\r\n                            <NavDropdown.Item onClick={() => setShowSignOut(true)}>Sign Out</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n\r\n        <SignInModal show={showSignIn} onHide={() => setShowSignIn(false)} />\r\n        <SignUpModal show={showSignUp} onHide={() => setShowSignUp(false)} />\r\n        <SignOutModal show={showSignOut} onHide={() => setShowSignOut(false)} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavBar;"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;AAUA,MAAM,SAAmB;IACrB,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAC;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAC;IAC7C,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAC;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iNAAQ,EAAC;IAEjD,qBACI;;0BACA,8OAAC,kMAAM;gBAAC,QAAO;gBAAK,OAAM;gBAAM,IAAG;gBAAU,SAAQ;gBAAO,WAAU;0BAClE,cAAA,8OAAC,2MAAS;;sCACN,8OAAC,kMAAM,CAAC,KAAK;4BAAC,IAAI,uKAAI;4BAAE,MAAK;sCAAI;;;;;;sCACjC,8OAAC,kMAAM,CAAC,MAAM;4BAAC,iBAAc;;;;;;sCAC7B,8OAAC,kMAAM,CAAC,QAAQ;4BAAC,IAAG;sCAChB,cAAA,8OAAC,yLAAG;gCAAC,WAAU;;kDACX,8OAAC,yLAAG,CAAC,IAAI;wCAAC,IAAI,uKAAI;wCAAE,MAAK;wCAAI,WAAU;;0DACnC,8OAAC,kOAAY;;;;;0DACb,8OAAC;gDAAK,WAAU;0DAAgB;;;;;;;;;;;;kDAEpC,8OAAC,yLAAG,CAAC,IAAI;wCAAC,IAAI,uKAAI;wCAAE,MAAK;wCAAI,WAAU;;0DACnC,8OAAC,6NAAS;;;;;0DACV,8OAAC;gDAAK,WAAU;0DAAgB;;;;;;;;;;;;kDAEpC,8OAAC,yLAAG,CAAC,IAAI;wCAAC,IAAI,uKAAI;wCAAE,MAAK;wCAAI,WAAU;;0DACnC,8OAAC,uNAAO;;;;;0DACR,8OAAC;gDAAK,WAAU;0DAAgB;;;;;;;;;;;;kDAEpC,8OAAC,iNAAW;wCACZ,IAAG;wCACH,WAAU;wCACV,mBAAmB;wCACnB,MAAM;wCACN,UAAU,CAAC,SAAW,gBAAgB;wCACtC,qBACI,8OAAC;4CAAK,OAAO;gDAAE,SAAS;gDAAQ,YAAY;gDAAU,KAAK;4CAAM;;8DAC7D,8OAAC,0MAAI;;;;;gDACJ,6BAAe,8OAAC,6NAAS;oDAAC,MAAM;;;;;2EAAS,8OAAC,mOAAW;oDAAC,MAAM;;;;;;;;;;;;;0DAGjE,8OAAC,iNAAW,CAAC,IAAI;gDAAC,SAAS,IAAM,cAAc;0DAAO;;;;;;0DACtD,8OAAC,iNAAW,CAAC,IAAI;gDAAC,SAAS,IAAM,cAAc;0DAAO;;;;;;0DACtD,8OAAC,iNAAW,CAAC,IAAI;gDAAC,SAAS,IAAM,eAAe;0DAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAO3E,8OAAC,mJAAW;gBAAC,MAAM;gBAAY,QAAQ,IAAM,cAAc;;;;;;0BAC3D,8OAAC,mJAAW;gBAAC,MAAM;gBAAY,QAAQ,IAAM,cAAc;;;;;;0BAC3D,8OAAC,oJAAY;gBAAC,MAAM;gBAAa,QAAQ,IAAM,eAAe;;;;;;;;AAGtE;uCAEe","debugId":null}}]
}